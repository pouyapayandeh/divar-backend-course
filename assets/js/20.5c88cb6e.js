(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{212:function(t,e,r){"use strict";r.r(e);var a=r(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"کنترل-نسخه"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#کنترل-نسخه"}},[t._v("#")]),t._v(" کنترل نسخه")]),t._v(" "),r("p",[t._v("برای این‌که افراد یک تیم روی یک پروژه بتونن کار‌های مختلف رو جلو ببرن از ابزار‌های کنترل نسخه (version control) مثل گیت (Git) استفاده می‌شه. ویدیویی برای یاد‌گرفتن گیت آماده کردیم که توی "),r("a",{attrs:{href:"https://drive.google.com/open?id=1bi48QnW-uASTAEx8sdV5mvJsR41eUMed",target:"_blank",rel:"noopener noreferrer"}},[t._v("این"),r("OutboundLink")],1),t._v(" آدرس می‌تونی ببینیش.")]),t._v(" "),r("p",[t._v("تو دیوار همهی پروژه های یک branch به اسم master دارن(خود git اولین branchی که می‌سازه به همین اسمه)  و بعد برای هر feature که قراره یه پروژه اضافه بشه یه branch جدا درست می کنیم و بعد از آماده شدن اون یک merge request‌ برای اون branch می سازیم. برای این که بدونی این روند چجوری کار می‌کنه خوبه که "),r("a",{attrs:{href:"https://docs.gitlab.com/ee/workflow/gitlab_flow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitlab Flow"),r("OutboundLink")],1),t._v(" رو بخونی.")]),t._v(" "),r("h3",{attrs:{id:"تمرین"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#تمرین"}},[t._v("#")]),t._v(" تمرین")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("دستورات زیر رو برو بخون و مسلط باش چون خیلی به کارت میان:")]),t._v(" "),r("pre",[r("code",[t._v(" Git [ stash | branch | checkout | rebase | commit | push | reset ]\n")])])]),t._v(" "),r("li",[r("p",[t._v("در مورد فایل gitignore مطالعه کن، با تنظیم کردن محتویات فایل gitignore فایلای نامربوط روی گیت فرستاده نمی‌شن.")])]),t._v(" "),r("li",[r("p",[t._v("راجع به زبان markdown بخون چون فایل های readme رو تو پروژه های مختلف با این زبان نوشتیم.")])]),t._v(" "),r("li",[r("p",[t._v("فرض کن وسط کاری روی برنچ A هستی و تغییرات اخیرت رو کامیت نکردی. کاری پیش میاد و مجبوری بری روی برنچ B کار کنی و کد‌هات روی اون برنچ رو پوش کنی و برگردی سر برنچ A. چه شکلی می‌تونی به کد‌هایی که زدی و کامیت نکردی دسترسی داشته باشی؟ (می‌تونی از دستور git stash استفاده کنی)")])]),t._v(" "),r("li",[r("p",[t._v("پیدا کن که چه جوری می‌شه کد الان رو با کد مربوط به کامیت‌های قدیمی‌تر مقایسه کرد؟")])]),t._v(" "),r("li",[r("p",[t._v("این "),r("a",{attrs:{href:"https://chris.beams.io/posts/git-commit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("مقاله"),r("OutboundLink")],1),t._v(" یه سری اصول و استاندارد در مورد متن پیام کامیت‌ه که بهتره بخونی.")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);